services:

  # frontend / next js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./frontend/ # path - меняется на локальном компьютере
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json
    networks:
      - red-aura-movies-network

  # database / postgresql
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1984
    ports:
      - "5434:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - red-aura-movies-network

  # Backend / Django
  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      DEBUG : "False"
      DB_NAME: "postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "1984"
      DB_HOST: "postgres"
      DB_PORT: 5432
    networks:
      - red-aura-movies-network

  # Nginx
  nginx:
    image: nginx:latest
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/staticfiles
      - media_volume:/media
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - red-aura-movies-network

# Общие папки
volumes:
  pg_data:
  static_volume:
  media_volume:

# Сети
networks:
  red-aura-movies-network:
    driver: bridge